resources:
  Dbp\Relay\AuthorizationBundle\Entity\Group:
    shortName: "AuthorizationGroup"
    normalizationContext:
      groups: ["AuthorizationGroup:output"]
    denormalizationContext:
      groups: ["AuthorizationGroup:input"]
    operations:
      ApiPlatform\Metadata\Get:
        provider: Dbp\Relay\AuthorizationBundle\Rest\GroupProvider
        uriTemplate: "/authorization/groups/{identifier}"
        openapiContext:
          tags: ["Authorization"]
      ApiPlatform\Metadata\GetCollection:
        provider: Dbp\Relay\AuthorizationBundle\Rest\GroupProvider
        uriTemplate: "/authorization/groups"
        openapiContext:
          tags: ["Authorization"]
      ApiPlatform\Metadata\Post:
        processor: Dbp\Relay\AuthorizationBundle\Rest\GroupProcessor
        uriTemplate: "/authorization/groups"
        openapiContext:
          tags: ["Authorization"]
          requestBody:
            content:
              application/ld+json:
                schema:
                  type: "object"
                  properties:
                    name:
                      type: "string"
                  required:
                    - name
                example:
                  name: "Example Group Name"

      ApiPlatform\Metadata\Delete:
        provider: Dbp\Relay\AuthorizationBundle\Rest\GroupProvider
        processor: Dbp\Relay\AuthorizationBundle\Rest\GroupProcessor
        uriTemplate: "/authorization/groups/{identifier}"
        openapiContext:
          tags: ["Authorization"]
    properties:
      identifier:
        identifier: true
      name:
        iri: 'https://schema.org/name'

  Dbp\Relay\AuthorizationBundle\Entity\GroupMember:
    shortName: "AuthorizationGroupMember"
    normalizationContext:
      groups: ["AuthorizationGroupMember:output"]
    denormalizationContext:
      groups: ["AuthorizationGroupMember:input"]
    operations:
      ApiPlatform\Metadata\Get:
        provider: Dbp\Relay\AuthorizationBundle\Rest\GroupMemberProvider
        uriTemplate: "/authorization/group-members/{identifier}"
        openapiContext:
          tags: ["Authorization"]

      ApiPlatform\Metadata\GetCollection:
        provider: Dbp\Relay\AuthorizationBundle\Rest\GroupMemberProvider
        uriTemplate: "/authorization/group-members"
        openapiContext:
          tags: ["Authorization"]
          parameters:
            - name: groupIdentifier
              in: query
              description: 'The identifier of the AuthorizationGroup resource to get group members for'
              type: string
              required: true

      ApiPlatform\Metadata\Post:
        processor: Dbp\Relay\AuthorizationBundle\Rest\GroupMemberProcessor
        uriTemplate: "/authorization/group-members"
        openapiContext:
          tags: ["Authorization"]
          requestBody:
            content:
              application/ld+json:
                schema:
                  type: "object"
                  properties:
                    group:
                      type: "string"
                    userIdentifier:
                      type: "string"
                    childGroup:
                      type: "string"
                    dynamicGroupIdentifier:
                      type: "string"
                  required:
                    - group
                example:
                  group: "/authorization/groups/{identifier}"
                  userIdentifier: "811EC3ACC0ADCA70" # woody007

      ApiPlatform\Metadata\Delete:
        provider: Dbp\Relay\AuthorizationBundle\Rest\GroupMemberProvider
        processor: Dbp\Relay\AuthorizationBundle\Rest\GroupMemberProcessor
        uriTemplate: "/authorization/group-members/{identifier}"
        openapiContext:
          tags: [ "Authorization" ]

  Dbp\Relay\AuthorizationBundle\Entity\AuthorizationResource:
    shortName: "AuthorizationResource"
    normalizationContext:
      groups: [ "AuthorizationResource:output" ]
    operations:
      ApiPlatform\Metadata\Get:
        provider: Dbp\Relay\AuthorizationBundle\Rest\AuthorizationResourceProvider
        uriTemplate: "/authorization/resources/{identifier}"
        openapiContext:
          tags: [ "Authorization" ]
      ApiPlatform\Metadata\GetCollection:
        provider: Dbp\Relay\AuthorizationBundle\Rest\AuthorizationResourceProvider
        uriTemplate: "/authorization/resources"
        openapiContext:
          tags: [ "Authorization" ]
          parameters:
            - name: resourceClass
              in: query
              description: 'The resource class to get grants for'
              type: string
              required: false
    properties:
      identifier:
        identifier: true
      resourceClass:
        iri: 'https://schema.org/additionalProperty'
      resourceIdentifier:
        iri: 'https://schema.org/identifier'

  Dbp\Relay\AuthorizationBundle\Entity\ResourceActionGrant:
    shortName: "AuthorizationResourceActionGrant"
    normalizationContext:
      groups: [ "AuthorizationResourceActionGrant:output" ]
    denormalizationContext:
      groups: [ "AuthorizationResourceActionGrant:input" ]
    operations:
      ApiPlatform\Metadata\Get:
        provider: Dbp\Relay\AuthorizationBundle\Rest\ResourceActionGrantProvider
        uriTemplate: "/authorization/resource-action-grants/{identifier}"
        openapiContext:
          tags: [ "Authorization" ]
      ApiPlatform\Metadata\GetCollection:
        provider: Dbp\Relay\AuthorizationBundle\Rest\ResourceActionGrantProvider
        uriTemplate: "/authorization/resource-action-grants"
        openapiContext:
          tags: [ "Authorization" ]
          parameters:
            - name: resourceClass
              in: query
              description: 'The resource class to get grants for'
              type: string
              required: false
      ApiPlatform\Metadata\Post:
        processor: Dbp\Relay\AuthorizationBundle\Rest\ResourceActionGrantProcessor
        uriTemplate: "/authorization/resource-action-grants"
        openapiContext:
          tags: [ "Authorization" ]
          requestBody:
            content:
              application/ld+json:
                schema:
                  type: "object"
                  properties:
                    authorizationResource:
                      type: "string"
                    action:
                      type: "string"
                    userIdentifier:
                      type: "string"
                    groupIdentifier:
                      type: "string"
                  required:
                    - action
                example:
                  authorizationResource: "/authorization/resources/{identifier}"
                  action: "write"
                  userIdentifier: "811EC3ACC0ADCA70" # woody007

      ApiPlatform\Metadata\Delete:
        provider: Dbp\Relay\AuthorizationBundle\Rest\ResourceActionGrantProvider
        processor: Dbp\Relay\AuthorizationBundle\Rest\ResourceActionGrantProcessor
        uriTemplate: "/authorization/resource-action-grants/{identifier}"
        openapiContext:
          tags: [ "Authorization" ]

    properties:
      identifier:
        identifier: true
      authorizationResource:
        iri: 'https://schema.org/identifier'
      action:
        iri: 'https://schema.org/Action'
      userIdentifier:
        iri: 'https://schema.org/identifier'
      groupIdentifier:
        iri: 'https://schema.org/identifier'
      dynamicGroupIdentifier:
        iri: 'https://schema.org/identifier'

  Dbp\Relay\AuthorizationBundle\Entity\AvailableResourceClassActions:
    shortName: "AuthorizationAvailableResourceClassActions"
    normalizationContext:
      groups: ["AuthorizationAvailableResourceClassActions:output"]
    operations:
      ApiPlatform\Metadata\Get:
        provider: Dbp\Relay\AuthorizationBundle\Rest\AvailableResourceClassActionsProvider
        uriTemplate: "/authorization/available-resource-class-actions"
        openapiContext:
          tags: ["Authorization"]
          parameters:
            - name: resourceClass
              in: query
              description: 'The resource class to get available actions for'
              type: string
              required: true
    properties:
      identifier:
        identifier: true
        iri: 'https://schema.org/identifier'
      itemActions:
        iri: 'https://schema.org/additionalProperty'
      collectionActions:
        iri: 'https://schema.org/additionalProperty'
